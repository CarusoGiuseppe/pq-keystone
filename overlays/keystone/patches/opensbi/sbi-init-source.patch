--- a/lib/sbi/sbi_init.c	2022-06-25 05:42:10.000000000 +0200
+++ b/lib/sbi/sbi_init.c	2024-01-29 10:54:48.815681946 +0100
@@ -231,7 +231,7 @@
 
 static unsigned long init_count_offset;
 
-static void __noreturn init_coldboot(struct sbi_scratch *scratch, u32 hartid)
+static void __noreturn init_coldboot(struct sbi_scratch *scratch, u32 hartid, bool flag)
 {
 	int rc;
 	unsigned long *init_count;
@@ -273,6 +273,10 @@
 
 	sbi_boot_print_banner(scratch);
 
+	if (flag == FALSE){
+		sbi_panic("Error validating security monitor, STOP BOOTING");
+	}
+
 	rc = sbi_irqchip_init(scratch, TRUE);
 	if (rc) {
 		sbi_printf("%s: irqchip init failed (error %d)\n",
@@ -457,7 +461,7 @@
  *
  * @param scratch pointer to sbi_scratch of current HART
  */
-void __noreturn sbi_init(struct sbi_scratch *scratch)
+void __noreturn sbi_init(struct sbi_scratch *scratch, bool flag)
 {
 	bool next_mode_supported	= FALSE;
 	bool coldboot			= FALSE;
@@ -506,7 +510,7 @@
 		sbi_hart_hang();
 
 	if (coldboot)
-		init_coldboot(scratch, hartid);
+		init_coldboot(scratch, hartid, flag);
 	else
 		init_warmboot(scratch, hartid);
 }
@@ -559,3 +563,7 @@
 
 	sbi_hsm_exit(scratch);
 }
+
+void to_be_stopped(struct sbi_scratch *scratch){
+	sbi_init(scratch, TRUE);
+}
